const { Sequelize } = require('sequelize');

// Configuraci√≥n de la base de datos
const config = {
  username: "ont",
  password: "123456",
  database: "xmls",
  host: "localhost",
  dialect: "postgres"
};

const sequelize = new Sequelize(config);

async function checkNotificationsMenu() {
  try {
    console.log('üîç Verificando m√≥dulo de notificaciones en men√∫s...\n');

    // 1. Verificar conexi√≥n
    console.log('1. Verificando conexi√≥n a la base de datos...');
    await sequelize.authenticate();
    console.log('‚úÖ Conexi√≥n exitosa\n');

    // 2. Verificar si existe el men√∫ de notificaciones
    console.log('2. Verificando men√∫ de notificaciones...');
    const [notificationsMenu] = await sequelize.query(`
      SELECT * FROM app.menus WHERE label = 'Notificaciones' OR key = 'notificaciones'
    `);

    if (notificationsMenu.length > 0) {
      console.log('‚úÖ Men√∫ de notificaciones encontrado:');
      notificationsMenu.forEach((menu, index) => {
        console.log(`   ${index + 1}. ${menu.label} (${menu.key})`);
        console.log(`      ID: ${menu.id}`);
        console.log(`      Ruta: ${menu.route}`);
        console.log(`      Icono: ${menu.icon}`);
        console.log(`      Orden: ${menu.orden}`);
        console.log(`      Estado: ${menu.status}`);
        console.log('');
      });
    } else {
      console.log('‚ùå Men√∫ de notificaciones no encontrado');
    }

    // 3. Verificar todos los men√∫s para ver el orden
    console.log('3. Verificando todos los men√∫s...');
    const [allMenus] = await sequelize.query(`
      SELECT id, label, key, route, icon, orden, status
      FROM app.menus
      ORDER BY orden ASC
    `);

    console.log('üìã Todos los men√∫s:');
    allMenus.forEach((menu, index) => {
      console.log(`   ${index + 1}. ${menu.label} (${menu.key}) - Orden: ${menu.orden}`);
    });

    // 4. Verificar si hay men√∫s especiales
    console.log('\n4. Verificando men√∫s especiales...');
    const specialMenus = ['Reportes de Cierre', 'Formas no Validadas', 'Creaci√≥n de Conceptos', 'Notificaciones'];
    
    specialMenus.forEach(menuTitle => {
      const found = allMenus.find(menu => menu.label === menuTitle);
      if (found) {
        console.log(`   ‚úÖ ${menuTitle} - Orden: ${found.orden}`);
      } else {
        console.log(`   ‚ùå ${menuTitle} - No encontrado`);
      }
    });

    console.log('\n‚úÖ Verificaci√≥n completada');

  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    await sequelize.close();
  }
}

// Ejecutar verificaci√≥n
checkNotificationsMenu(); 